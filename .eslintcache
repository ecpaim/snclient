[{"/home/eduardo/webdev/snclient/src/reportWebVitals.js":"1","/home/eduardo/webdev/snclient/src/App.js":"2","/home/eduardo/webdev/snclient/src/index.js":"3","/home/eduardo/webdev/snclient/src/theme.js":"4","/home/eduardo/webdev/snclient/src/components/mainAppBar.js":"5","/home/eduardo/webdev/snclient/src/components/mainFeed.js":"6","/home/eduardo/webdev/snclient/src/components/sideBar.js":"7","/home/eduardo/webdev/snclient/src/redux/user/userSlice.js":"8","/home/eduardo/webdev/snclient/src/components/newPost.js":"9","/home/eduardo/webdev/snclient/src/pages/home.js":"10","/home/eduardo/webdev/snclient/src/components/protectedRoute.js":"11","/home/eduardo/webdev/snclient/src/pages/login.js":"12","/home/eduardo/webdev/snclient/src/components/authRoute.js":"13","/home/eduardo/webdev/snclient/src/redux/root.js":"14","/home/eduardo/webdev/snclient/src/util/cssTextField.js":"15","/home/eduardo/webdev/snclient/src/pages/signup.js":"16","/home/eduardo/webdev/snclient/src/pages/postpage.js":"17","/home/eduardo/webdev/snclient/src/components/post.js":"18","/home/eduardo/webdev/snclient/src/components/newComment.js":"19","/home/eduardo/webdev/snclient/src/pages/messages.js":"20","/home/eduardo/webdev/snclient/src/components/newMessage.js":"21","/home/eduardo/webdev/snclient/src/util/time_formatting.js":"22"},{"size":362,"mtime":1607043304000,"results":"23","hashOfConfig":"24"},{"size":1198,"mtime":1621725149882,"results":"25","hashOfConfig":"24"},{"size":2144,"mtime":1615854036000,"results":"26","hashOfConfig":"24"},{"size":961,"mtime":1614472094000,"results":"27","hashOfConfig":"24"},{"size":15242,"mtime":1622410078056,"results":"28","hashOfConfig":"24"},{"size":1968,"mtime":1622253739412,"results":"29","hashOfConfig":"24"},{"size":6489,"mtime":1614541284000,"results":"30","hashOfConfig":"24"},{"size":2301,"mtime":1622396703298,"results":"31","hashOfConfig":"24"},{"size":7108,"mtime":1621618672523,"results":"32","hashOfConfig":"24"},{"size":842,"mtime":1613760626000,"results":"33","hashOfConfig":"24"},{"size":568,"mtime":1613760626000,"results":"34","hashOfConfig":"24"},{"size":6587,"mtime":1614476450000,"results":"35","hashOfConfig":"24"},{"size":548,"mtime":1613760626000,"results":"36","hashOfConfig":"24"},{"size":146,"mtime":1611764428000,"results":"37","hashOfConfig":"24"},{"size":684,"mtime":1613760626000,"results":"38","hashOfConfig":"24"},{"size":8305,"mtime":1614470452000,"results":"39","hashOfConfig":"24"},{"size":5547,"mtime":1622322904048,"results":"40","hashOfConfig":"24"},{"size":10479,"mtime":1622322896004,"results":"41","hashOfConfig":"24"},{"size":6418,"mtime":1622331623395,"results":"42","hashOfConfig":"24"},{"size":7479,"mtime":1622405885891,"results":"43","hashOfConfig":"24"},{"size":5145,"mtime":1622403832317,"results":"44","hashOfConfig":"24"},{"size":582,"mtime":1622405063174,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"44ckv7",{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"56"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"53"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/eduardo/webdev/snclient/src/reportWebVitals.js",[],"/home/eduardo/webdev/snclient/src/App.js",["97"],"/home/eduardo/webdev/snclient/src/index.js",["98","99"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport jwtDecode from 'jwt-decode';\nimport axios from 'axios';\n\nimport { ThemeProvider as MuiThemeProvider } from '@material-ui/core/styles';\nimport createMuiTheme from '@material-ui/core/styles/createMuiTheme';\nimport themeFile from './theme';\n\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\n\nimport {Provider} from 'react-redux';\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport rootReducer from './redux/root';\nimport {setAuthentication, setUserInfo, setLikes} from  './redux/user/userSlice';\n\nconst theme = createMuiTheme(themeFile);\n\naxios.defaults.baseURL = \"http://localhost:3001\";\n\nconst store = configureStore({\n  reducer: rootReducer\n});\n\nconst token = localStorage.AuthToken;\nif(token){\n  console.log('ololo');\n  const decodedToken = jwtDecode(token);\n  console.log(decodedToken);\n\n  //if token expired\n  if(decodedToken.exp * 1000 < Date.now()) {\n    \n    window.location.href = '/login';\n  } else {\n    //console.log( decodedToken.exp * 1000 - Date.now() + \" seconds remain\");\n    axios.defaults.headers.common['Authorization'] = token;\n    store.dispatch(setAuthentication({user:decodedToken.sub, authBool: true}));\n\n    axios.get('/api/user')\n      .then((res) => {\n          console.log(res.data);\n          store.dispatch(setUserInfo({username: res.data.username, email: res.data.email, profilePic: res.data.profilePic}));\n          store.dispatch(setLikes({likes: res.data.likes }));\n        })\n    .catch(err => console.log(err));\n  }\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <MuiThemeProvider theme = {theme}>\n      <Provider store={store}>\n        <Router>\n          <App />\n        </Router>\n      </Provider>\n    </MuiThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["100","101"],"/home/eduardo/webdev/snclient/src/theme.js",[],["102","103"],"/home/eduardo/webdev/snclient/src/components/mainAppBar.js",["104","105","106","107","108","109","110","111"],"/home/eduardo/webdev/snclient/src/components/mainFeed.js",["112","113"],"/home/eduardo/webdev/snclient/src/components/sideBar.js",["114","115"],"import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Typography from '@material-ui/core/Typography';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport IconButton from '@material-ui/core/IconButton';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport EditIcon from '@material-ui/icons/Edit';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport GroupWorkIcon from '@material-ui/icons/GroupWork';\nimport SearchIcon from '@material-ui/icons/Search';\n\nimport {connect} from 'react-redux';\nimport {setUserInfo} from  '../redux/user/userSlice';\n\nimport CssTextField from '../util/cssTextField';\nimport fallbackImg from '../resources/blank_4_5.png';\n\nimport axios from 'axios';\n\nconst styles = (theme) => ({\n    ...theme.general,\n    pst:{\n        maxWidth:'50%',\n        backgroundColor:'#ffffff',\n        margin:6,\n        marginLeft:0,\n        padding:10,\n        border: '1px solid rgba(0,0,0,0.1)',   \n    },\n    circleImg:{\n        height:30,\n        width:30,\n        objectFit: 'cover',\n        borderRadius: '50%'\n    },\n    profilePicButton:{\n        padding:0,\n        marginRight:5\n    },\n    pstButtons:{\n        display:'flex',\n        marginLeft: 10,\n        marginRight:400,\n        marginBottom:8,\n    },\n    usernameText:{\n        fontSize:14,\n        padding:2,\n        paddingTop:6\n    },\n    usernameIcon:{\n        display:'flex',\n        marginLeft: 6,\n        marginRight:400,\n        marginBottom:8,\n    },\n    buttonsText:{\n        marginLeft:8,\n        marginTop:2\n    },\n    searchBar:{\n        fontSize: 14\n    }\n});\n\nconst SideBar = ({username,email, profilePic, setUserInfo, classes}) => {\n\n    const handleClickImage = () => {\n        \n        const fileInput = document.getElementById('profilePicInput');\n        fileInput.click();\n    \n    };\n    const handleImageChange = (event) => {\n        const image = event.target.files[0];\n\n        const formData = new FormData();\n        formData.append('image', image, image.name);\n        console.log('formdata[image]:');\n        console.log(formData.get('image'));\n\n        const currentDate = new Date();\n        formData.append('timestamp', currentDate.getTime());\n\n        axios.post('/api/changeprofilepic', formData)\n            .then((res) => {\n              console.log(res.data);\n           \n              setUserInfo({username: username, email: email, profilePic: res.data.profilePic});\n            \n            })\n            .catch(err => console.log(err));\n    };\n\n    return(\n        <div style={{position:'fixed'}}>\n        <div className={classes.pst}>\n            <CssTextField\n                id='searchbar'\n                placeholder='Pesquisar'\n                fullWidth\n                variant='outlined'\n                size='small'\n                InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <SearchIcon  style={{color:'rgba(0,0,0,0.33)', fontSize:20}} />\n                      </InputAdornment>\n                    ),\n                    classes: {\n                        input: classes.searchBar\n                    }\n                  }}\n                \n                />\n        </div>\n        <div className={classes.pst}>\n                  \n            <input type='file' id='profilePicInput' onChange={handleImageChange} hidden='hidden'/>\n            <div className={classes.usernameIcon}>\n                <IconButton aria-label=\"user photo\" color=\"inherit\" size='small' \n                    className={classes.profilePicButton} onClick={handleClickImage}>\n                    {profilePic !== '' ? \n                            <img src={profilePic} className={classes.circleImg} alt='profile picture' />\n                        : <img src={fallbackImg} className={classes.circleImg} alt='profile picture' /> }\n                </IconButton>\n                <div className={classes.usernameText}> <b> {username} </b> </div>\n\n            </div>\n\n            <div className={classes.pstButtons}>\n                <IconButton aria-label=\"user photo\" color=\"inherit\" size='small' >\n                    <EditIcon style={{fontSize:20}}/>\n                </IconButton>\n\n                <Typography className={classes.buttonsText} variant='body2'> Perfil </Typography>\n\n                <div className={classes.grow} />\n                \n            </div>\n            <div className={classes.pstButtons}>\n                <IconButton aria-label=\"user photo\" color=\"inherit\" size='small' >\n                    <AccountCircle style={{fontSize:20}}/>\n                </IconButton>\n\n                <Typography className={classes.buttonsText} variant='body2'> Seguidores </Typography>\n\n                <div className={classes.grow} />\n                \n            </div>\n            <div className={classes.pstButtons}>\n                <IconButton aria-label=\"user photo\" color=\"inherit\" size='small' >\n                    <AccountCircle style={{fontSize:20}}/>\n                </IconButton>\n\n                <Typography className={classes.buttonsText} variant='body2'> Seguindo </Typography>\n\n                <div className={classes.grow} />\n                \n            </div>\n            <div className={classes.pstButtons}>\n                <IconButton aria-label=\"user photo\" color=\"inherit\" size='small' >\n                    <GroupWorkIcon style={{fontSize:20}}/>\n                </IconButton>\n\n                <Typography className={classes.buttonsText} variant='body2'> Grupos </Typography>\n\n                <div className={classes.grow} />\n                \n            </div>\n            <div className={classes.pstButtons}>\n\n                <IconButton aria-label=\"user photo\" color=\"inherit\" size='small' >\n                    <SettingsIcon style={{fontSize:20}}/>\n                </IconButton>\n\n                <Typography className={classes.buttonsText} variant='body2'> Configurações </Typography>\n\n                <div className={classes.grow} />\n                \n            </div>\n        </div>\n        </div>\n    );\n};\n\nSideBar.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = state => ({\n    username: state.user.username,\n    email: state.user.email,\n    profilePic: state.user.profilePic\n});\n\nconst mapActionsToProps = { setUserInfo };\n\nexport default connect(mapStateToProps, mapActionsToProps)(withStyles(styles)(SideBar));\n","/home/eduardo/webdev/snclient/src/redux/user/userSlice.js",[],"/home/eduardo/webdev/snclient/src/components/newPost.js",["116"],"import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Button from '@material-ui/core/Button';\nimport ImageIcon from '@material-ui/icons/Image';\nimport LockIcon from '@material-ui/icons/Lock';\n\nimport CssTextField from '../util/cssTextField';\n\nimport axios from 'axios';\n\nimport loadingCat from '../resources/loadingIcon.svg';\nimport blankPst from '../resources/blank_4_5.svg';\nimport fallbackImg from '../resources/blank_4_5.png';\n\nimport {connect} from 'react-redux';\n\nimport { useHistory } from \"react-router-dom\";\n\nconst styles = (theme) => ({\n    ...theme.general,\n    pst:{\n        backgroundColor:'#ffffff',\n        margin:6,\n        padding:10,\n        [theme.breakpoints.up('md')]: {\n            border: '1px solid rgba(0,0,0,0.1)',\n        }\n    },\n    addPost:{\n        display:'flex',\n        \n    },\n    circleImg:{\n      height:40,\n      width:40,\n      objectFit: 'cover',\n      borderRadius: '50%'\n    },\n    textField:{\n        paddingLeft:0,\n        paddingRight:0\n    },\n    textSize:{\n        fontSize:14,\n    },\n    postOptions:{\n        minWidth:0,\n        paddingRight:3,\n        paddingLeft:3,\n        marginLeft:5\n    },\n    postFeed:{\n        color:'rgba(0,0,0,0.4)',\n        fontSize:13,\n        lineHeight:1,\n        padding:4,\n        marginTop:10,\n        paddingLeft:9\n    },\n    postButton:{\n        minWidth:0,\n        lineHeight:1,\n        marginTop:10,\n        marginRight:6,\n        color:'#6202f3'\n    }\n\n});\n\n\nfunction NewPost({username,email,profilePic,classes}) {\n\n    const [newPost, setNewPost] = React.useState({description:\"\", imageUrl:\"\",formData:\"\",feed:'geral'});\n\n    const history = useHistory();\n\n    const handleImageChange = (event) => {\n\n        const image = event.target.files[0];\n        \n        const formData = new FormData();\n        formData.append('image', image, image.name);\n        console.log('formdata[image]:');\n        console.log(formData.get('image'));\n    \n        setNewPost({\n          ...newPost,\n          formData: formData,\n          imageUrl: URL.createObjectURL(image)\n        });\n      };\n    \n      const handleEditPicture = () => {\n        \n        const fileInput = document.getElementById('imageInput');\n        fileInput.click();\n    \n      };\n    \n      const handleWriteDescription = (event) => { \n        console.log(newPost);\n        setNewPost({\n          ...newPost,\n          description: event.target.value\n        });\n      }\n      \n      const handleClickPost = () => {\n        if(newPost.description || newPost.formData['image']){\n          let fd;\n          if(newPost.formData){\n            fd = newPost.formData;\n          } else {\n            fd = new FormData();\n          }\n    \n          fd.append('description', newPost.description);\n    \n          const currentDate = new Date();\n          const timestamp = currentDate.getTime();\n          console.log(timestamp);\n          fd.append('timestamp', timestamp);\n\n          const feed = 'MAIN';\n          fd.append('feed', feed);\n\n          fd.append('profilepic', profilePic);\n    \n          if(newPost.imageUrl){ // post with images\n\n            axios.post('/api/pstimg', fd)\n            .then((res) => {\n              console.log(res);\n            })\n            .catch(err => console.log(err));\n    \n          } else { // post without images\n            axios.post('/api/pst', {timestamp:timestamp, profilepic: profilePic, description: newPost.description, feed:'MAIN'})\n            .then((res) => {\n              console.log(res);\n            })\n            .catch(err => console.log(err));\n          }\n          \n    \n        } else {\n          console.log('no content found.');\n        }\n      };\n\n      const handleClickProfilePic = () => {\n        history.push(`/${username}`);\n      }\n\n    return (\n        <div className={classes.pst}>\n            <div className={classes.addPost}>\n             <Button \n                    style={{minWidth:0,paddingLeft:10,paddingRight:10,marginRight:10}}\n                    tip='Profile picture' \n                    size='small'\n                    onClick={handleClickProfilePic}\n                    >\n                      <div>\n                      {profilePic !== '' ? \n                        <img src={profilePic} className={classes.circleImg} alt='profile' />\n                      : <img src={fallbackImg} className={classes.circleImg} alt='profile' /> }\n                      </div>\n                     \n                  \n              </Button>\n\n              <CssTextField\n                  className = {classes.textField}\n                  onChange={handleWriteDescription}\n                  id='description'\n                  placeholder='Escreva alguma coisa...'\n                  fullWidth\n                  multiline\n                  rows={2}\n                  rowsMax={4}\n                  variant='outlined'\n                  size='small'\n                  InputProps={{ \n                      classes: {\n                          input: classes.textSize\n                      }\n                    }}\n                  />\n              <div>\n                    <div>\n                      <input type='file' id='imageInput' onChange={handleImageChange} hidden='hidden'/>\n                      <Button \n                        className={classes.postOptions}\n                        size='small'\n                        tip='Add Image' \n                        onClick={handleEditPicture} \n                        >\n                          <ImageIcon color='secondary' style={{fontSize:20}} />\n                      </Button>\n                    </div>\n\n                    <div>\n                      <Button \n                        className={classes.postOptions}\n                        size='small'\n                        tip='Change visibility' \n                        \n                        >\n                          <LockIcon color='secondary' style={{fontSize:20}}/>\n                      </Button>\n                    </div>\n              </div>\n            </div>\n            <div className={classes.addPost}>\n            <div className={classes.postFeed}>  Postar em: geral  </div>\n              <div className={classes.grow} />\n                  <Button \n                      className={classes.postButton}\n                      tip='Create post' \n                      size='small'\n                      onClick={handleClickPost}\n                      >\n                        POST\n                  </Button>\n            </div>\n            {\n              newPost.imageUrl ? <img src={newPost.imageUrl} style={{width:'50%'}} alt='preview'/> \n                : null\n            }\n            <img src={loadingCat} style={{width:'50%'}} alt='loading'hidden='hidden'/>    \n  \n          </div>\n    );\n}\n\nNewPost.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = state => ({\n    username: state.user.username,\n    email: state.user.email,\n    profilePic: state.user.profilePic\n});\n\nexport default connect(mapStateToProps)(withStyles(styles)(NewPost));","/home/eduardo/webdev/snclient/src/pages/home.js",[],"/home/eduardo/webdev/snclient/src/components/protectedRoute.js",[],"/home/eduardo/webdev/snclient/src/pages/login.js",[],"/home/eduardo/webdev/snclient/src/components/authRoute.js",[],["117","118"],"/home/eduardo/webdev/snclient/src/redux/root.js",[],"/home/eduardo/webdev/snclient/src/util/cssTextField.js",[],"/home/eduardo/webdev/snclient/src/pages/signup.js",[],"/home/eduardo/webdev/snclient/src/pages/postpage.js",["119"],"/home/eduardo/webdev/snclient/src/components/post.js",["120"],"import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\nimport ModeCommentOutlinedIcon from '@material-ui/icons/ModeCommentOutlined';\nimport ShareOutlinedIcon from '@material-ui/icons/ShareOutlined';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport FilterVintageIcon from '@material-ui/icons/FilterVintage';\nimport Popover from '@material-ui/core/Popover';\nimport Button from '@material-ui/core/Button';\n\nimport blankPst from '../resources/blank_4_5.svg';\nimport fallbackImg from '../resources/blank_4_5.png';\n\nimport {connect} from 'react-redux';\nimport {addLike,removeLike} from  '../redux/user/userSlice';\n\nimport axios from 'axios';\n\nconst styles = (theme) => ({\n    ...theme.general,\n    pst:{\n        backgroundColor:'#ffffff',\n        color: '#000000', // black\n        margin:6,\n        [theme.breakpoints.up('md')]: {\n            padding:10,\n            border: '1px solid rgba(0,0,0,0.1)',\n        }\n    },\n    pstImg:{\n        width:'100%',\n        [theme.breakpoints.up('md')]: {\n            width:'90%',\n            paddingLeft:'5%',\n            paddingRight:'5%',\n            paddingBottom:10,\n            paddingTop:10\n        }\n    },\n    pstButtons:{\n        display:'flex',\n        paddingLeft: 3,\n        paddingRight: 3,\n    },\n    pstBottomButtons:{\n        display:'flex',\n        paddingLeft: 3,\n        paddingRight: 3,\n        color: 'rgb(0.0,0.0,0.0,0.6)'\n    },\n    pstButtonsText:{\n        paddingTop:5\n    },\n    pstIcons:{\n        fontSize: 28,\n        padding:3,\n        [theme.breakpoints.up('md')]: {\n            fontSize: 20,\n        }\n    },\n    favouriteIcon:{\n        fontSize: 28,\n        paddingLeft:1,\n        [theme.breakpoints.up('md')]: {\n            fontSize: 24,\n        },\n\n    },\n    favouriteIconVisible:{\n        color: '#cc0000', // red\n        fontSize: 28,\n        paddingLeft:1,\n        [theme.breakpoints.up('md')]: {\n            fontSize: 24,\n        },\n\n    },\n    favouriteIconHidden:{\n        color: theme.palette.secondary.main,\n        fontSize: 28,\n        paddingLeft:1,\n        [theme.breakpoints.up('md')]: {\n            fontSize: 24,\n        },\n\n    },\n    flowerIcon:{\n        fontSize: 20,\n        paddingLeft:1,\n        [theme.breakpoints.up('md')]: {\n            fontSize: 18,\n        },\n    },\n    pstUser:{\n        fontSize:36,\n        paddingBottom:3,\n        paddingTop:3\n    },\n    profilePicButton:{\n        padding:0,\n        marginRight:5,\n        marginTop:6,\n        marginBottom:8,\n    },\n    circleImg:{\n        fontSize:10,\n        height:38,\n        width:38,\n        objectFit: 'cover',\n        borderRadius: '50%'\n      },\n\n    pstDescription:{\n        paddingLeft: 48,\n        paddingRight: 48\n    },\n    pstUsernameText:{\n        fontSize:14,\n        padding:2,\n        paddingTop:8\n    },\n    pstFeedText:{\n        fontSize:13,\n        padding:2,\n        paddingTop:10,\n        paddingRight:10,\n        color:'rgba(0,0,0,0.4)'\n    },\n    likeMenu:{\n        display:'flex'\n    },\n    likeOptions:{\n        paddingTop:6,\n        paddingBottom:6\n    }\n});\n\nconst Post = ({username, likes, addLike, removeLike, classes, post}) => {\n\n    const [anchor, setAnchor] = React.useState({value: null, open: false});\n    const [pst, setPst] = React.useState(post);\n\n    const handleClick = (event, id) => {\n        console.log(event);\n        console.log(id);\n        setAnchor({value:event.currentTarget, open: Boolean(event.currentTarget)});\n    };\n\n    const handleClose = (id) => {\n     \n        setAnchor({value:null, open: Boolean(null)});\n    };\n\n    const handleLike = (id, type, pstOwner) => {\n        /*\n        let newLikedPosts = {...likedPosts};\n        newLikedPosts[id] = type;\n        setLikedPosts(newLikedPosts);\n        */\n       let like = {id: id, type: type};\n        addLike({like});\n\n        setAnchor({value:null, open: Boolean(null)});\n\n        const currentDate = new Date();\n        \n        const newLike = {\n            type: 'LIKE',\n            hidden: type === 'visible' ? false : true,\n            timestamp: currentDate.getTime(),\n            id: id,\n            username: pstOwner\n        };\n\n        axios.post('/api/reactpost', newLike)\n            .then((res) => {    \n                console.log(res);\n                \n                let newPost = {...pst};\n                newPost.nLikes += 1;\n                setPst(newPost);\n\n            }).catch( err => {\n                console.log(err);\n                removeLike({id: id});\n                // maybe show an error message?\n            });\n\n\n        return;\n    }\n\n    return(\n        <div className={classes.pst} key={pst.id}>\n\n                        <div className={classes.pstButtons}>\n\n                        <IconButton aria-label=\"user photo\" color=\"inherit\" size='small' \n                            className={classes.profilePicButton}>\n                            {pst.profilePic !== '' ? \n                                    <img src={pst.profilePic} className={classes.circleImg} alt='profile' />\n                                : <img src={fallbackImg} className={classes.circleImg} alt='profile' /> }\n                        </IconButton>\n\n                            <Typography className={classes.pstUsernameText}> <b> {pst.username} </b> </Typography>\n\n                            <div className={classes.grow} />\n\n                            <Typography className={classes.pstFeedText}> feed: geral </Typography>          \n                        </div>\n\n                        <Typography variant='body2' className={classes.pstDescription}> {pst.description} </Typography>\n\n                        \n                        {pst.imgUrl ? \n                            <img src={pst.imgUrl} className={classes.pstImg} alt ='posted by this user' />\n                         : <div style={{margin:12}}/> }\n\n                        <div className={classes.pstBottomButtons}>\n                       \n                            <Typography variant='body2' className={classes.pstButtonsText}> {pst.nLikes} </Typography>\n                            \n                            { likes[pst.id] === undefined ? \n                                    <IconButton aria-describedby={pst.id} aria-label=\"like post\" color=\"inherit\" size='small' onClick={(e) => handleClick(e,pst.id)}>\n                                        <FavoriteBorderIcon className={classes.favouriteIcon}/>\n                                    </IconButton>\n                                : likes[pst.id] === 'hidden' ?\n                                    <IconButton aria-describedby={pst.id} aria-label=\"like post\" color=\"inherit\" size='small' >\n                                        <FavoriteIcon className={classes.favouriteIconHidden}/>\n                                    </IconButton>\n                                    : \n                                    <IconButton aria-describedby={pst.id} aria-label=\"like post\" color=\"inherit\" size='small' >\n                                        <FavoriteIcon className={classes.favouriteIconVisible}/>\n                                    </IconButton> \n                            }\n                            <Popover id={pst.id} open={anchor.open} anchorEl={anchor.value} onClose={() => handleClose(pst.id)}\n                                elevation={1}\n                                anchorOrigin={{\n                                vertical: 'top',\n                                horizontal: 'center',\n                                }}\n                                transformOrigin={{\n                                vertical: 'bottom',\n                                horizontal: 'center',\n                                }}\n                            >\n                                <div className={classes.likeMenu}>\n                                <Button \n                                    className={classes.likeOptions}\n                                    size='small'  \n                                    onClick={() => handleLike(pst.id, 'visible', pst.username)} \n                                    >\n                                    <FavoriteIcon  className={classes.favouriteIconVisible}/>\n                                </Button>\n                                <Button \n                                    className={classes.likeOptions}\n                                    size='small' \n                                    onClick={() => handleLike(pst.id, 'hidden', pst.username)}  \n                                    >\n                                    <FavoriteIcon  className={classes.favouriteIconHidden}/>\n                                </Button>\n                                </div>\n                            </Popover>\n\n                            <Typography style={{margin:4}}/>\n                            <Typography variant='body2' className={classes.pstButtonsText}> {pst.nComments} </Typography>\n                            <IconButton aria-label=\"comment on post\" color=\"inherit\" size='small' >\n                                <ModeCommentOutlinedIcon className={classes.pstIcons}/>\n                            </IconButton>\n\n                            <Typography style={{margin:4}}/>\n                            <Typography variant='body2' className={classes.pstButtonsText}> {pst.nGifts} </Typography>\n                            <IconButton aria-label=\"give a present\" color=\"inherit\" size='small' >\n                                <FilterVintageIcon className={classes.flowerIcon}/>\n                            </IconButton>\n\n                            <div className={classes.grow} />\n                            <IconButton aria-label=\"share post outside figario\" color=\"inherit\" size='small' >\n                                <ShareOutlinedIcon className={classes.pstIcons}/>\n                            </IconButton>\n                            </div>\n                    </div>\n    );\n};\n\nPost.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = state => ({\n    username: state.user.username,\n    authenticated: state.user.authenticated,\n    likes: state.user.likes\n});\n\nconst mapActionsToProps = { addLike, removeLike };\n\nexport default connect(mapStateToProps, mapActionsToProps)(withStyles(styles)(Post));","/home/eduardo/webdev/snclient/src/components/newComment.js",["121"],"/home/eduardo/webdev/snclient/src/pages/messages.js",["122","123","124","125","126","127"],"/home/eduardo/webdev/snclient/src/components/newMessage.js",["128","129","130","131"],"/home/eduardo/webdev/snclient/src/util/time_formatting.js",["132"],{"ruleId":"133","severity":1,"message":"134","line":10,"column":8,"nodeType":"135","messageId":"136","endLine":10,"endColumn":22},{"ruleId":"133","severity":1,"message":"137","line":13,"column":34,"nodeType":"135","messageId":"136","endLine":13,"endColumn":39},{"ruleId":"133","severity":1,"message":"138","line":13,"column":41,"nodeType":"135","messageId":"136","endLine":13,"endColumn":47},{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","replacedBy":"142"},{"ruleId":"139","replacedBy":"143"},{"ruleId":"141","replacedBy":"144"},{"ruleId":"133","severity":1,"message":"145","line":158,"column":25,"nodeType":"135","messageId":"136","endLine":158,"endColumn":39},{"ruleId":"133","severity":1,"message":"146","line":161,"column":11,"nodeType":"135","messageId":"136","endLine":161,"endColumn":19},{"ruleId":"133","severity":1,"message":"147","line":202,"column":11,"nodeType":"135","messageId":"136","endLine":202,"endColumn":22},{"ruleId":"148","severity":1,"message":"149","line":250,"column":33,"nodeType":"150","endLine":250,"endColumn":109},{"ruleId":"148","severity":1,"message":"149","line":251,"column":31,"nodeType":"150","endLine":251,"endColumn":108},{"ruleId":"151","severity":1,"message":"152","line":279,"column":88,"nodeType":"153","messageId":"154","endLine":279,"endColumn":90},{"ruleId":"148","severity":1,"message":"149","line":339,"column":33,"nodeType":"150","endLine":339,"endColumn":109},{"ruleId":"148","severity":1,"message":"149","line":340,"column":31,"nodeType":"150","endLine":340,"endColumn":108},{"ruleId":"133","severity":1,"message":"155","line":15,"column":9,"nodeType":"135","messageId":"136","endLine":15,"endColumn":16},{"ruleId":"133","severity":1,"message":"156","line":15,"column":18,"nodeType":"135","messageId":"136","endLine":15,"endColumn":28},{"ruleId":"148","severity":1,"message":"149","line":126,"column":29,"nodeType":"150","endLine":126,"endColumn":105},{"ruleId":"148","severity":1,"message":"149","line":127,"column":27,"nodeType":"150","endLine":127,"endColumn":104},{"ruleId":"133","severity":1,"message":"157","line":14,"column":8,"nodeType":"135","messageId":"136","endLine":14,"endColumn":16},{"ruleId":"139","replacedBy":"158"},{"ruleId":"141","replacedBy":"159"},{"ruleId":"160","severity":1,"message":"161","line":92,"column":8,"nodeType":"162","endLine":92,"endColumn":10,"suggestions":"163"},{"ruleId":"133","severity":1,"message":"157","line":15,"column":8,"nodeType":"135","messageId":"136","endLine":15,"endColumn":16},{"ruleId":"164","severity":1,"message":"165","line":100,"column":38,"nodeType":"166","messageId":"167","endLine":100,"endColumn":40},{"ruleId":"133","severity":1,"message":"168","line":8,"column":8,"nodeType":"135","messageId":"136","endLine":8,"endColumn":18},{"ruleId":"133","severity":1,"message":"169","line":12,"column":8,"nodeType":"135","messageId":"136","endLine":12,"endColumn":18},{"ruleId":"133","severity":1,"message":"170","line":16,"column":8,"nodeType":"135","messageId":"136","endLine":16,"endColumn":19},{"ruleId":"133","severity":1,"message":"171","line":17,"column":8,"nodeType":"135","messageId":"136","endLine":17,"endColumn":18},{"ruleId":"133","severity":1,"message":"172","line":18,"column":8,"nodeType":"135","messageId":"136","endLine":18,"endColumn":12},{"ruleId":"160","severity":1,"message":"173","line":164,"column":8,"nodeType":"162","endLine":164,"endColumn":10,"suggestions":"174"},{"ruleId":"133","severity":1,"message":"175","line":6,"column":8,"nodeType":"135","messageId":"136","endLine":6,"endColumn":17},{"ruleId":"133","severity":1,"message":"176","line":7,"column":8,"nodeType":"135","messageId":"136","endLine":7,"endColumn":16},{"ruleId":"164","severity":1,"message":"165","line":91,"column":38,"nodeType":"166","messageId":"167","endLine":91,"endColumn":40},{"ruleId":"133","severity":1,"message":"177","line":92,"column":17,"nodeType":"135","messageId":"136","endLine":92,"endColumn":23},{"ruleId":"133","severity":1,"message":"178","line":2,"column":8,"nodeType":"135","messageId":"136","endLine":2,"endColumn":13},"no-unused-vars","'ProtectedRoute' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'Switch' is defined but never used.","no-native-reassign",["179"],"no-negated-in-lhs",["180"],["179"],["180"],"'setNewMessages' is assigned a value but never used.","'messages' is assigned a value but never used.","'handleClose' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'addLike' is defined but never used.","'removeLike' is defined but never used.","'blankPst' is defined but never used.",["179"],["180"],"react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'addCurrentPost', 'timeid', and 'userid'. Either include them or remove the dependency array. If 'addCurrentPost' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["181"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'IconButton' is defined but never used.","'NewComment' is defined but never used.","'fallbackImg' is defined but never used.","'loadingCat' is defined but never used.","'Post' is defined but never used.","React Hook React.useEffect has missing dependencies: 'addMessages', 'latestMsg', and 'userid'. Either include them or remove the dependency array. If 'addMessages' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["182"],"'ImageIcon' is defined but never used.","'LockIcon' is defined but never used.","'hidden' is assigned a value but never used.","'React' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"183","fix":"184"},{"desc":"185","fix":"186"},"Update the dependencies array to be: [addCurrentPost, timeid, userid]",{"range":"187","text":"188"},"Update the dependencies array to be: [addMessages, latestMsg, userid]",{"range":"189","text":"190"},[2456,2458],"[addCurrentPost, timeid, userid]",[4587,4589],"[addMessages, latestMsg, userid]"]